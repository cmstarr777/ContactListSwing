package Contacts;
 
import javax.swing.*;
import javax.swing.text.*; 
import java.awt.*;              //for layout managers and more
import java.awt.event.*; 		 //for action events
import java.awt.Container;         
import java.net.URL;
import java.io.IOException;
 
public class TextSamplerDemo extends JPanel
                             implements ActionListener {
    String newline = "\n";
    static String firstName = "First Name";
    JTextField firstNameField = new JTextField(10);
    static String lastName = "Last Name";
    JTextField lastNameField = new JTextField(10);
    static String homeAddress = "Home Address";
    JTextField homeAddressField = new JTextField(10);
    static String phoneNumber = "Phone Number";
    JFormattedTextField phoneNumberField = new JFormattedTextField();
    
    //Create a text area.
    JTextArea textArea = new JTextArea();
    //textArea.setEditable(false);
    
    
    static String buttonString = "Submit";
 
    JLabel actionLabel;
 
    public TextSamplerDemo() {
        setLayout(new BorderLayout());
 
        //Create a firstName text field.
        //JTextField firstNameField = new JTextField(10);
        firstNameField.setActionCommand(firstName);
        firstNameField.addActionListener(this);
        
        //Create label for the field.
        JLabel firstNameLabel = new JLabel(firstName + ": ");
        firstNameLabel.setLabelFor(firstNameField);
 
        //Create a lastName text field.
        //JTextField lastNameField = new JTextField(10);
        lastNameField.setActionCommand(lastName);
        lastNameField.addActionListener(this);
        
        //Create label for the field.
        JLabel lastNameLabel = new JLabel(lastName + ": ");
        lastNameLabel.setLabelFor(lastNameField);
        
        
      //Create a homeAddress text field.
       // JTextField homeAddressField = new JTextField(10);
        homeAddressField.setActionCommand(homeAddress);
        homeAddressField.addActionListener(this);
        
        //Create label for the field.
        JLabel homeAddressLabel = new JLabel(homeAddress + ": ");
        homeAddressLabel.setLabelFor(homeAddressField);
 
        //Create a formatted phoneNumber field.
        //JFormattedTextField phoneNumberField = new JFormattedTextField();
        phoneNumberField.setActionCommand(phoneNumber);
        phoneNumberField.addActionListener(this);
        
        //Create label for the field.
        JLabel phoneNumberlabel = new JLabel(phoneNumber + ": ");
        phoneNumberlabel.setLabelFor(phoneNumberField);
       
       
        //Create a label to put messages during an action event.
        actionLabel = new JLabel("Type text in a field and press Enter.");
        actionLabel.setBorder(BorderFactory.createEmptyBorder(10,0,0,0));
 
        //Lay out the text controls and the labels.
        JPanel textControlsPane = new JPanel();
        GridBagLayout gridbag = new GridBagLayout();
        GridBagConstraints c = new GridBagConstraints();
 
        textControlsPane.setLayout(gridbag);
        
 
        JLabel[] labels = {firstNameLabel, lastNameLabel, homeAddressLabel, phoneNumberlabel};
        JTextField[] textFields = {firstNameField, lastNameField, homeAddressField, phoneNumberField};
        addLabelTextRows(labels, textFields, gridbag, textControlsPane);
 
        c.gridwidth = GridBagConstraints.REMAINDER; //last
        c.anchor = GridBagConstraints.WEST;
        c.weightx = 1.0;
        textControlsPane.add(actionLabel, c);
        textControlsPane.setBorder(
                BorderFactory.createCompoundBorder(
                                BorderFactory.createTitledBorder("Text Fields"),
                                BorderFactory.createEmptyBorder(5,5,5,5)));
 
        //add stuff for text area
        //JTextArea textArea = new JTextArea( "This is an editable JTextArea. ");
        textArea.setFont(new Font("Serif", Font.ITALIC, 16));
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        JScrollPane areaScrollPane = new JScrollPane(textArea);
        areaScrollPane.setVerticalScrollBarPolicy(
                        JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        areaScrollPane.setPreferredSize(new Dimension(450, 250));
        areaScrollPane.setBorder(
            BorderFactory.createCompoundBorder(
                BorderFactory.createCompoundBorder(
                                BorderFactory.createTitledBorder("Plain Text"),
                                BorderFactory.createEmptyBorder(5,5,5,5)),
                areaScrollPane.getBorder()));
 
        
        //Put everything together.
        JPanel leftPane = new JPanel(new BorderLayout());
        JButton SubmitButton = new JButton("Submit");
        SubmitButton.addActionListener(this);        
        //buttonPanel.add(SubmitButton);
        leftPane.add(textControlsPane, 
                     BorderLayout.PAGE_START);
        leftPane.add(areaScrollPane,
                     BorderLayout.CENTER);
        leftPane.add(SubmitButton,
                BorderLayout.SOUTH);
        add(leftPane, BorderLayout.LINE_START);   
       //add(rightPane, BorderLayout.LINE_END);
    }
    
    private void addLabelTextRows(JLabel[] labels,
                                  JTextField[] textFields,
                                  GridBagLayout gridbag,
                                  Container container) {
        GridBagConstraints c = new GridBagConstraints();
        c.anchor = GridBagConstraints.EAST;
        int numLabels = labels.length;
 
        for (int i = 0; i < numLabels; i++) {
            c.gridwidth = GridBagConstraints.RELATIVE; //next-to-last
            c.fill = GridBagConstraints.NONE;      //reset to default
            c.weightx = 0.0;                       //reset to default
            container.add(labels[i], c);
 
            c.gridwidth = GridBagConstraints.REMAINDER;     //end row
            c.fill = GridBagConstraints.HORIZONTAL;
            c.weightx = 1.0;
            container.add(textFields[i], c);
        }
    }

    public void actionPerformed(ActionEvent e) {

    	if(e.getActionCommand().equals("Submit")) {
    		 String firstNameIn=firstNameField.getText();
    		 String lastNameIn=lastNameField.getText();
    		 String homeAddressIn=homeAddressField.getText();
    		 String phoneNumberIn=phoneNumberField.getText();
    		 
    		 
    		 String homeAddressOut = "Home Address: " + homeAddressIn;
    		 String phoneNumberOut = "Phone Number: " + phoneNumberIn;
    		 String firstNameOut = "\n\nFor Contact:\nFirst Name: " + firstNameIn;
    		 String lastNameOut = "Last Name: " + lastNameIn;

    		 
    		
    		 textArea.append(homeAddressOut + newline);
    		 textArea.append(phoneNumberOut + newline);
    		 textArea.append(firstNameOut + newline);
    		 textArea.append(lastNameOut + newline);

    		    		 
    		 System.out.print("firstNameIn: " + firstNameIn + "\n" + "lastNameIn: " + lastNameIn +  "\n" +"homeAddressIn: " +  homeAddressIn 
    				 +  "\n" +"phoneNumberIn: " + phoneNumberIn);
        }
    }
 
    /**
     * Create the GUI and show it.  For thread safety,
     * this method should be invoked from the
     * event dispatch thread.
     */
    private static void createAndShowGUI() {
        //Create and set up the window.
        JFrame frame = new JFrame("TextSamplerDemo");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 
        //Add content to the window.
        frame.add(new TextSamplerDemo());
 
        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }
 
    public static void main(String[] args) {
        //Schedule a job for the event dispatching thread:
        //creating and showing this application's GUI.
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                 //Turn off metal's use of bold fonts
        UIManager.put("swing.boldMetal", Boolean.FALSE);
        createAndShowGUI();
            }
        });
    }
}
